{"version":3,"sources":["components/NavBar.js","sortingAlgorithims.js","Visualizer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","this","props","state","showNav","onClick","handleNavToggle","style","marginLeft","id","e","handleSelected","currAlg","type","min","max","class","onChange","changeArrSize","arrSize","changeAnimationSpeed","animationSpeed","reset","React","Component","bubbleSort","arr","animations","cout","i","length","j","swap","push","a","b","temp","mergeSort","auxArr","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","auxiliaryArray","k","console","log","doMerge","quickSwap","items","leftIndex","rightIndex","quickSort","left","right","index","pivot","partition","insertionSort","curr","sleep","ms","Promise","resolve","setTimeout","Visualizer","array","arrRange","play","currAnimations","isSorted","isSorting","fadeIn","previousArr","resetArray","newArr","amt","randomIntFromInterval","arrBars","document","getElementsByClassName","backgroundColor","progressBar","querySelector","value","setState","repeatArr","target","animateBubbleSort","remaining","currAnime","barOne","barTwo","height","handleFinish","animateMergeSort","val","arrayBars","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","color","newHeight","animateQuickSort","animation","animateInsertionSort","handlePause","func","handleSkip","currSkip","data","handlePrevious","idx","newAnimations","_min","_max","ceil","random","playVal","map","CSSTransition","in","appear","timeout","classNames","xmlns","marginTop","marginRight","cursor","width","fill","viewBox","d","fill-rule","visibility","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ca1cc108.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/navbar.css'\n//\nclass Navbar extends React.Component{\n\n    render(){\n\n        return(\n            <div>\n                <div className={this.props.state.showNav ? \"navTrigger\" : \"navTrigger active\"} onClick={this.props.handleNavToggle}>\n                    <i></i><i></i><i></i>\n                </div>\n                <div className=\"nav-container\" style={{marginLeft: `${this.props.state.showNav ? '-100%' : '0'}`}}>\n                    <div className=\"sortBtnContainer\">\n                        <button className=\"sortBtn\" id=\"bubbleSortBtn\" onClick={(e)=>{\n                            this.props.handleSelected(e)\n                            this.props.state.currAlg = 'Bubble-Sort'\n                        }}>Bubble sort</button>\n                        <button className=\"sortBtn\" id=\"mergeSortBtn\" onClick={(e)=>{\n                            this.props.state.currAlg = 'Merge-Sort'\n                            this.props.handleSelected(e)\n                        }}>Merge sort</button>\n                        <button className=\"sortBtn\" id=\"quickSortBtn\" onClick={(e)=>{\n                            this.props.state.currAlg = 'Quick-Sort'\n                            this.props.handleSelected(e)\n                        }}>Quick sort</button>\n                        <button className=\"sortBtn\" id=\"insertionSortBtn\" onClick={(e)=>{\n                            this.props.state.currAlg = 'Insertion-Sort'\n                            this.props.handleSelected(e)\n                        }}>Insertion sort</button>\n                    </div>\n                    <div className=\"slideContainer\">\n                        <input type=\"range\" min=\"10\" max=\"100\" class=\"slider\" id=\"myRange\" onChange={this.props.changeArrSize}/>\n                        <p className=\"slideInfo\">Array size: <span className=\"slideVal\">{this.props.state.arrSize}</span></p>\n                    </div>\n                    <div className=\"speedSliderContainer\">\n                        <input type='range' min={1} max={16} class=\"slider\" id=\"speedSlider\" onChange={this.props.changeAnimationSpeed}/>\n                        <p className=\"slideInfo\" id=\"speedSliderInfo\">Speed: <span className=\"slideVal\">{this.props.state.animationSpeed}</span></p>\n                    </div>\n                    <button className=\"sortBtn\" id=\"newArrBtn\" onClick={this.props.reset}>New Array</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Navbar;","//\nexport function bubbleSort(arr, animations, cout){\n    let i = 0;\n    let j = 0;\n    if (i < arr.length) {\n        for (let j = 0; j < arr.length - i - 1; j++) {\n          let a = arr[j];\n          let b = arr[j + 1];\n          if (a > b) {\n            swap(arr, j, j + 1);\n            animations.push([j, j+1, true, cout])\n          }\n        }\n      } else {\n        i = 0;\n        return animations;\n      }\n      i++;\n      return animations;\n}\n\nconst swap = (arr, a, b) => {\n    let temp = arr[a];\n    arr[a] = arr[b];\n    arr[b] = temp;\n};\n\nexport function mergeSort(arr){\n    const animations = [];\n    if(arr.length <= 1) return arr;\n    const auxArr = arr.slice();\n    mergeSortHelper(arr, 0, arr.length - 1, auxArr, animations);\n    return animations;\n}\n\nfunction mergeSortHelper(\n    mainArray,\n    startIdx,\n    endIdx,\n    auxArr,\n    animations,\n  ) {\n    if (startIdx === endIdx) return;\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\n    mergeSortHelper(auxArr, startIdx, middleIdx, mainArray, animations);\n    mergeSortHelper(auxArr, middleIdx + 1, endIdx, mainArray, animations);\n    doMerge(mainArray, startIdx, middleIdx, endIdx, auxArr, animations);\n}\n//\nfunction doMerge(\n  mainArray,\n  startIdx,\n  middleIdx,\n  endIdx,\n  auxiliaryArray,\n  animations,\n) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    animations.push([i, j, false]);\n    animations.push([i, j, false]);\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      //swaping below\n      animations.push([k, auxiliaryArray[i], true, auxiliaryArray[j]]);\n      mainArray[k++] = auxiliaryArray[i++];\n    } else {\n      //swaping below\n      animations.push([k, auxiliaryArray[j], true, auxiliaryArray[i]]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    animations.push([i, i, false]);\n    animations.push([i, i, false]);\n    //swaping below\n    console.log(auxiliaryArray[i], i)\n    animations.push([k, auxiliaryArray[i], true, auxiliaryArray[k]]);\n    mainArray[k++] = auxiliaryArray[i++];\n  }\n  while (j <= endIdx) {\n    animations.push([j, j, false]);\n    animations.push([j, j, false]);\n    //swapping below\n    console.log(auxiliaryArray[j], mainArray[j])\n    animations.push([k, auxiliaryArray[j], true,  auxiliaryArray[i]]);\n    mainArray[k++] = auxiliaryArray[j++];\n  }\n}\n\nfunction quickSwap(items, leftIndex, rightIndex) {\n    var temp = items[leftIndex];\n    items[leftIndex] = items[rightIndex];\n    items[rightIndex] = temp;\n}\n\nfunction partition(items, left, right, animations) {\n    var pivot   = items[Math.floor((right + left) / 2)], //middle element\n    i       = left, //left pointer\n    j       = right; //right pointer\n    while (i <= j) {\n        while (items[i] < pivot) {\n            i++;\n        }\n        while (items[j] > pivot) {\n            j--;\n        }\n        if (i <= j) {\n            quickSwap(items, i, j); //swapping two elements\n            animations.push([i, j, true])\n            i++;\n            j--;\n        }\n    }\n    return i;\n}\n\nexport function quickSort(items, left, right, animations) {\n    var index;\n    if (items.length > 1) {\n        index = partition(items, left, right, animations); //index returned from partition\n        if (left < index - 1) { //more elements on the left side of the pivot\n            quickSort(items, left, index - 1, animations);\n        }\n        if (index < right) { //more elements on the right side of the pivot\n            quickSort(items, index, right, animations);\n        }\n    }\n    return items;\n}\n\nexport function insertionSort(arr, animations){\n    for(let i = 0; i < arr.length; i++){\n        let curr = arr[i]\n        let j = i - 1\n\n        while (j >= 0 && arr[j] > curr) {\n            arr[j + 1] = arr[j]\n            animations.push([j, j+1])\n            j--\n        }\n\n        arr[j + 1] = curr\n    }\n    return animations;\n}\n","import React, { Component} from 'react';\nimport Navbar from './components/NavBar';\nimport { bubbleSort, mergeSort, quickSort, insertionSort } from './sortingAlgorithims';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport './styles/visualizer.css'\n\n\nfunction sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nclass Visualizer extends Component{\n\n    state = {\n        array: [],\n        arrRange: 300,\n        arrSize: 50,\n        animationSpeed: 16,\n        play: false,\n        animations: [],\n        currAnimations: [],\n        isSorted: false,\n        showNav: true,\n        isSorting: false,\n        currAlg: 'Bubble-Sort',\n        fadeIn: false,\n        cout: 0\n    };\n\n    componentDidMount() {\n        this.resetArray();\n        document.getElementsByClassName('.slider').value = this.state.arrSize\n    }\n\n    previousArr = []\n\n    resetArray = (e, newArr=null) => {\n        this.state.fadeIn = false\n        var arr = [];\n        let amt = this.state.arrSize\n        if(newArr===null){\n            for (let i = 0; i < amt - 1; i++){\n                arr.push(this.randomIntFromInterval(10, this.state.arrRange));\n            }\n        } else {\n            arr = newArr\n        }\n        console.log(arr)\n        setTimeout(() => {\n            const arrBars = document.getElementsByClassName('arr-bar')\n            for(let i = 0; i < arrBars.length; i++){\n                arrBars[i].style.backgroundColor = '#19bc8b'\n            }\n        }, 200)\n        const progressBar = document.querySelector('#bar')\n        progressBar.value = 0\n        progressBar.max = arr.length\n        this.previousArr = arr\n        this.setState({array: arr, isSorted: false, fadeIn: true});\n    }\n\n    repeatArr = () => {\n        const newArr = this.previousArr\n        this.resetArray(null, newArr)\n\n    }\n\n    changeArrSize = (e) => {\n        this.setState({arrSize: e.target.value})\n        this.resetArray()\n    }\n\n    changeAnimationSpeed = (e) => {\n        this.setState({animationSpeed: e.target.value})\n    }\n\n    randomIntFromInterval(min, max) {\n        var _min = Math.floor(min);\n        var _max = Math.ceil(max);\n        return Math.floor(Math.random() * (_max - _min) + _min);\n    }\n\n    animateBubbleSort = async (e, remaining=[]) =>{\n        if(!this.state.isSorted){\n            this.state.isSorted = true\n            this.state.isSorting = true\n            let arr = [...this.state.array]\n            let len = this.state.array.length;\n            let animations = [];\n            const progressBar = document.querySelector('#bar')\n            if(remaining.length < 1){\n                for(let i = 0;i < this.state.arrSize; i++){\n                    bubbleSort(arr, animations, i, (i+1===arr.length));\n                    arr = [...arr]  \n                    progressBar.max = animations.length\n                    this.state.animations = animations\n                }\n            } else {\n                animations = remaining\n                this.state.play = true\n            }\n            for(let i = 0; i < animations.length; i++){\n                if(this.state.play === true){\n                    const arrBars = document.getElementsByClassName('arr-bar');\n                    var currAnime = animations[i];\n                    const barOne = arrBars[currAnime[0]];\n                    const barTwo = arrBars[currAnime[1]];\n                    if(currAnime[2]){\n                        barOne.style.backgroundColor = 'red';\n                        barTwo.style.backgroundColor = 'aquamarine';\n                        await sleep(this.state.animationSpeed);\n                        var temp = barOne.style.height;\n                        barOne.style.height = barTwo.style.height;\n                        barTwo.style.height = temp;\n                        barOne.style.backgroundColor = 'aquamarine';\n                    } else {\n                        barOne.style.backgroundColor = 'aquamarine';\n                        barTwo.style.backgroundColor = 'aquamarine';\n                        await sleep(i*this.state.animationSpeed);\n                    }\n                    progressBar.value++\n                    this.state.currAnimations = [[...animations.slice(i, animations.length)], this.animateBubbleSort, i, animations]\n                } else {\n                    this.state.isSorting = false\n                    this.state.currAnimations = [[...animations.slice(i, animations.length)], this.animateBubbleSort, i, animations]\n                    return\n                }\n            }\n            this.handleFinish()\n        } else {\n            this.setState({isSorted: false})\n            this.resetArray()\n            return\n        } \n    }\n\n    animateMergeSort = async (e, remaining=[], val=0) => {\n        if(!this.state.isSorted){\n            this.state.isSorted = true;\n            this.state.isSorting = true\n            var animations = []\n            const progressBar = document.querySelector('#bar')\n            const arrayBars = document.getElementsByClassName('arr-bar');\n            if(remaining.length < 1){\n                var arr = [...this.state.array]\n                animations = mergeSort(arr)\n                progressBar.max = animations.length\n                this.state.animations = animations\n            } else {\n                animations = remaining\n                this.state.play = true\n            }\n            for (let i = 0; i < animations.length; i++) {\n                if(this.state.play === true){\n                    if (!animations[i][2]) {\n                        const barOneIdx = animations[i][0]\n                        const barTwoIdx = animations[i][1]\n                        const barOneStyle = arrayBars[barOneIdx].style;\n                        const barTwoStyle = arrayBars[barTwoIdx].style;\n                        var cout = val+i\n                        const color = cout % 3 === 0 ? 'red' : 'aquamarine';\n                        await sleep(this.state.animationSpeed*2)\n                        barOneStyle.backgroundColor = color;\n                        barTwoStyle.backgroundColor = color;\n                    } else {\n                        await sleep(this.state.animationSpeed*2)\n                        const [barOneIdx, newHeight] = animations[i];\n                        const barOneStyle = arrayBars[barOneIdx].style;\n                        barOneStyle.height = `${newHeight}px`;\n                    }\n                    progressBar.value++\n                    this.state.currAnimations = [[...animations.slice(i, animations.length)], this.animateMergeSort, i, animations]\n                } else {\n                    this.state.isSorting = false\n                    this.state.currAnimations = [[...animations.slice(i, animations.length)], this.animateMergeSort, i, animations]\n                    return\n                }\n            }\n            this.handleFinish()\n        } else {\n            this.setState({isSorted: false})\n            this.resetArray()\n            return\n        }\n    }\n\n    animateQuickSort = async (e, remaining=[]) => {\n        if(!this.state.isSorted){\n            this.state.isSorted = true\n            this.state.isSorting = true\n            const progressBar = document.querySelector('#bar')\n            var animations = [];\n            if(remaining.length < 1){\n                var arr = [...this.state.array]\n                quickSort(arr, 0, this.state.array.length - 1, animations); \n                progressBar.max = animations.length\n                this.state.animations = animations\n            } else {\n                animations = remaining\n                this.state.play = true\n            }\n            for(let i = 0; i < animations.length; i++) {  \n                if(this.state.play === true){\n                    var animation = animations[i]  \n                    const arrBars = document.getElementsByClassName('arr-bar');\n                    const barOne = arrBars[animation[0]];\n                    const barTwo = arrBars[animation[1]];\n                    barOne.style.backgroundColor = 'red';\n                    barTwo.style.backgroundColor = 'aquamarine';\n                    await sleep(this.state.animationSpeed);\n                    var temp = barOne.style.height;\n                    barOne.style.height = barTwo.style.height;\n                    barTwo.style.height = temp;\n                    await sleep(4)\n                    barOne.style.backgroundColor = 'aquamarine';\n                    progressBar.value++\n                    this.state.currAnimations = [[...animations.slice(i, animations.length)], this.animateQuickSort, i, animations]\n                } else {\n                    this.state.isSorting = false\n                    this.state.currAnimations = [[...animations.slice(i, animations.length)], this.animateQuickSort, i, animations]\n                    return\n                }\n            }\n            this.handleFinish()\n        } else {\n            this.setState({isSorted: false})\n            this.resetArray()\n            return\n        } \n    }\n\n    animateInsertionSort = async (e, remaining=[]) => {\n        if(!this.state.isSorted){\n            this.state.isSorting = true\n            this.state.isSorted = true\n            var animations = []\n            const progressBar = document.querySelector('#bar')\n            if(remaining.length < 1){\n                var arr = [...this.state.array]\n                insertionSort(arr, animations)\n                progressBar.max = animations.length\n                this.state.animations = animations\n            } else {\n                animations = remaining\n                this.state.play = true\n            }\n            for(let i = 0; i < animations.length; i++){\n                if(this.state.play === true){\n                    var animation = animations[i];\n                    const arrBars = document.getElementsByClassName('arr-bar');\n                    const barOne = arrBars[animation[0]];\n                    const barTwo = arrBars[animation[1]];\n                    barOne.style.backgroundColor = 'red';\n                    barTwo.style.backgroundColor = 'aquamarine';\n                    await sleep(this.state.animationSpeed);\n                    var temp = barOne.style.height;\n                    barOne.style.height = barTwo.style.height;\n                    barTwo.style.height = temp;\n                    await sleep(4)\n                    barOne.style.backgroundColor = 'aquamarine';\n                    progressBar.value++\n                    this.state.currAnimations = [[...animations.slice(i, animations.length)], this.animateInsertionSort, i, animations]\n                } else {\n                    this.state.isSorting = false\n                    this.state.currAnimations = [[...animations.slice(i, animations.length)], this.animateInsertionSort, i, animations]\n                    return\n                }\n            }\n            this.handleFinish()\n        } else {\n            this.resetArray()\n            this.setState({isSorted: false})\n            return\n        }\n    }\n\n    handleFinish = () => {\n        this.setState({currAnimations: [], isSorting: false, currAlg: 'null', play: false})\n    }\n\n    handlePause = (e) => {\n        var curr = this.state.play\n        this.setState({play: !curr})\n        if(!this.state.isSorted){\n            if(this.state.currAlg === 'Bubble-Sort'){\n                this.state.play = true\n                this.animateBubbleSort()\n            } else if(this.state.currAlg === 'Merge-Sort'){\n                this.state.play = true\n                this.animateMergeSort()\n            } else if(this.state.currAlg === 'Quick-Sort'){\n                this.state.play = true\n                this.animateQuickSort()\n            } else if(this.state.currAlg ==='Insertion-Sort'){\n                this.state.play = true\n                this.animateInsertionSort()\n            } else {\n                this.state.currAlg = 'null'\n            }\n        } else {\n            if(!curr && this.state.currAnimations != []){\n                var remaining = this.state.currAnimations[0]\n                var func = this.state.currAnimations[1]\n                var i = this.state.currAnimations[2]\n                this.state.isSorted = false\n                if(this.state.currAnimations[0]){\n                    func(null, remaining, i)\n                }\n            }\n        }\n    }\n\n    handleSkip = async (e) => {\n        const progressBar = document.querySelector('#bar')\n        if(!this.state.isSorting && this.state.currAnimations[0].length > 0 && this.state.currAlg != 'Merge-Sort' && !this.state.play){\n            const arrBars = document.getElementsByClassName('arr-bar');\n            var animations = this.state.currAnimations[0]\n            const currSkip = animations[0]\n            const barOne = arrBars[currSkip[0]]\n            const barTwo = arrBars[currSkip[1]]\n            barOne.style.backgroundColor = 'red'\n            barTwo.style.backgroundColor = 'aquamarine'\n            await sleep(this.state.animationSpeed*2)\n            var temp = barOne.style.height;\n            barOne.style.height = barTwo.style.height;\n            barTwo.style.height = temp;\n            await sleep(4)\n            barOne.style.backgroundColor = 'aquamarine';\n            progressBar.value++\n            this.setState({currAnimations: [[...animations.slice(1, animations.length)], this.state.currAnimations[1], this.state.currAnimations[2], currSkip]})\n        } else if(this.state.currAlg === 'Merge-Sort' && !this.state.play && this.state.currAnimations[0].length > 0) {\n            const arrayBars = document.getElementsByClassName('arr-bar');\n            const data = this.state.currAnimations\n            var animations = data[0]\n            const currSkip = data[0][0]\n            if (!currSkip[2]) {\n                const barOneIdx = currSkip[0]\n                const barTwoIdx = currSkip[1]\n                const barOneStyle = arrayBars[barOneIdx].style;\n                const barTwoStyle = arrayBars[barTwoIdx].style;\n                const color = data[2] % 3 === 0 ? 'red' : 'aquamarine';\n                await sleep(this.state.animationSpeed*2)\n                barOneStyle.backgroundColor = color;\n                barTwoStyle.backgroundColor = color;\n            } else {\n                await sleep(this.state.animationSpeed*2)\n                const [barOneIdx, newHeight] = currSkip;\n                const barOneStyle = arrayBars[barOneIdx].style;\n                barOneStyle.height = `${newHeight}px`;\n            }\n            progressBar.value++\n            this.setState({currAnimations: [[...animations.slice(1, animations.length)], data[1], data[2], currSkip]})\n        }\n    }\n\n    handlePrevious = async (e) => {\n        const progressBar = document.querySelector('#bar')\n        const arrBars = document.getElementsByClassName('arr-bar');\n        if(!this.state.isSorting && this.state.currAnimations[0] && this.state.currAlg != 'Merge-Sort' && !this.state.play && this.state.currAnimations[0].length > 0) {\n            var animations = this.state.animations\n            var currAnime = this.state.currAnimations\n            var idx = animations.length - currAnime[0].length\n            var newAnimations = [...animations.slice(idx-1, animations.length)]\n            console.log(newAnimations.length, animations.length)\n            if(newAnimations.length === 1){\n                this.setState({isSorted: false, isSorting: false})\n                for(let i = 0; i < arrBars.length; i++){\n                    await sleep(50)\n                    arrBars[i].style.backgroundColor = '#19bc8b'\n                }\n                return\n            }\n            const barOne = arrBars[newAnimations[0][0]]\n            const barTwo = arrBars[newAnimations[0][1]]\n            barOne.style.backgroundColor = '#19bc8b'\n            barTwo.style.backgroundColor = '#19bc8b'\n            await sleep(this.state.animationSpeed*2)\n            var temp = barOne.style.height;\n            barOne.style.height = barTwo.style.height;\n            barTwo.style.height = temp;\n            await sleep(4)\n            barOne.style.backgroundColor = 'aquamarine';\n            progressBar.val--\n            this.setState({currAnimations: [newAnimations, this.state.currAnimations[1], this.state.currAnimations[2], newAnimations[0]]})\n        } else if(this.state.currAlg === 'Merge-Sort' && !this.state.play) {\n            const arrayBars = document.getElementsByClassName('arr-bar');\n            const data = this.state.currAnimations\n            var animations = this.state.animations\n            var idx = animations.length - data[0].length\n            var newAnimations = [...animations.slice(idx-1, animations.length)]\n            var currSkip = newAnimations[0]\n            if(newAnimations.length === 1){\n                this.setState({isSorted: false, isSorting: false})\n                for(let i = 0; i < arrBars.length; i++){\n                    await sleep(50)\n                    arrBars[i].style.backgroundColor = '#19bc8b'\n                }\n                return\n            }\n            console.log(currSkip)\n            if (!currSkip[2]) {\n                const barOneIdx = currSkip[0]\n                const barTwoIdx = currSkip[1]\n                const barOneStyle = arrayBars[barOneIdx].style;\n                const barTwoStyle = arrayBars[barTwoIdx].style;\n                const color = data[2] % 3 === 0 ? '#19bc8b' : '#19bc8b';\n                await sleep(this.state.animationSpeed*2)\n                barOneStyle.backgroundColor = color;\n                barTwoStyle.backgroundColor = color;\n            } else {\n                await sleep(this.state.animationSpeed*2)\n                const barOneIdx = currSkip[0]\n                const newHeight = currSkip[3]\n                const barOneStyle = arrayBars[barOneIdx].style;\n                barOneStyle.height = `${newHeight}px`;\n            }\n            progressBar.value--\n            this.setState({currAnimations: [newAnimations, this.state.currAnimations[1], this.state.currAnimations[2], newAnimations[0]]})\n        }\n    }\n\n    handleNavToggle = (e) => {\n        this.setState({showNav: !this.state.showNav})\n    }\n//\n    handleSelected = async (e) => {\n        e.target.className = `${e.target.className} selected`\n    }\n    \n    render(){\n\n        var playVal = this.state.play\n\n        return(\n            <div id=\"mainContainer\">\n                <Navbar state={this.state} handleSelected={this.handleSelected} handleNavToggle={this.handleNavToggle} handlePause={this.handlePause} reset={this.resetArray} bubbleSort={this.animateBubbleSort} mergeSort={this.animateMergeSort} quickSort={this.animateQuickSort}  insertionSort={this.animateInsertionSort} changeArrSize={this.changeArrSize} changeAnimationSpeed={this.changeAnimationSpeed}/>\n                <div className=\"projectContainer\">\n                    <div className='visualizer-wrapper'>\n                        <div className=\"infoContainer\">\n                            <p className='infoStatic'>Current-algorithim: <span className=\"infoDynamic\">{this.state.currAlg}</span></p>\n                        </div>\n                        <div className=\"topContainer\">\n                            <div className=\"arrContainer\">\n                                {this.state.array.map((val, idx) => {\n                                    return (\n                                        <CSSTransition\n                                            in={true}\n                                            appear={true}\n                                            timeout={1000}\n                                            classNames=\"bar-\"\n                                        >\n                                            <div className='arr-bar' id=\"show\" key={idx} style={{height: `${val}px`}}/>\n                                        </CSSTransition>\n                                    )\n                                })}\n                            </div>\n                            <progress className=\"progressBar\" id='bar' value={0} max={100}/>\n                        </div>\n                    </div>\n                    <div className=\"controlsContainer\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" onClick={this.repeatArr} style={{marginTop: '-2px', marginRight: '5px'}} cursor=\"pointer\" color=\"aquamarine\" width='18' fill=\"currentColor\" class=\"bi bi-arrow-repeat\" viewBox=\"0 0 16 16\">\n                            <path d=\"M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41zm-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9z\"/>\n                            <path fill-rule=\"evenodd\" d=\"M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5.002 5.002 0 0 0 8 3zM3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9H3.1z\"/>\n                        </svg>\n                        <a onClick={this.handlePrevious}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" style={{marginTop: '5px'}} cursor=\"pointer\" color=\"aquamarine\" width=\"52\" className=\"previousBtn\" fill=\"currentColor\" class=\"bi bi-skip-start-fill\" viewBox=\"0 0 16 16\">\n                                <path d=\"M4 4a.5.5 0 0 1 1 0v3.248l6.267-3.636c.54-.313 1.232.066 1.232.696v7.384c0 .63-.692 1.01-1.232.697L5 8.753V12a.5.5 0 0 1-1 0V4z\"/>\n                            </svg>\n                        </a>\n                        <a className=\"ppBtn\" onClick={this.handlePause}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-play-circle-fill\" viewBox=\"0 0 16 16\" className='playBtn'>\n                                {playVal \n                                ? <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM6.25 5C5.56 5 5 5.56 5 6.25v3.5a1.25 1.25 0 1 0 2.5 0v-3.5C7.5 5.56 6.94 5 6.25 5zm3.5 0c-.69 0-1.25.56-1.25 1.25v3.5a1.25 1.25 0 1 0 2.5 0v-3.5C11 5.56 10.44 5 9.75 5z\"/>\n                                :  <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM6.79 5.093A.5.5 0 0 0 6 5.5v5a.5.5 0 0 0 .79.407l3.5-2.5a.5.5 0 0 0 0-.814l-3.5-2.5z\"/>\n                                }\n                            </svg>\n                        </a>\n                        <a onClick={this.handleSkip}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" style={{marginTop: '5px'}} cursor=\"pointer\" color=\"aquamarine\" width=\"50\" className=\"skipBtn\" fill=\"currentColor\" class=\"bi bi-skip-end-fill\" viewBox=\"0 0 16 16\">\n                                <path d=\"M12.5 4a.5.5 0 0 0-1 0v3.248L5.233 3.612C4.693 3.3 4 3.678 4 4.308v7.384c0 .63.692 1.01 1.233.697L11.5 8.753V12a.5.5 0 0 0 1 0V4z\"/>\n                            </svg>\n                        </a>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" onClick={this.resetArray} style={{marginTop: '-2px', marginLeft: '5px'}} cursor=\"pointer\" color=\"aquamarine\" width='16' fill=\"currentColor\" class=\"bi bi-shuffle\" viewBox=\"0 0 16 16\">\n                            <path fill-rule=\"evenodd\" d=\"M0 3.5A.5.5 0 0 1 .5 3H1c2.202 0 3.827 1.24 4.874 2.418.49.552.865 1.102 1.126 1.532.26-.43.636-.98 1.126-1.532C9.173 4.24 10.798 3 13 3v1c-1.798 0-3.173 1.01-4.126 2.082A9.624 9.624 0 0 0 7.556 8a9.624 9.624 0 0 0 1.317 1.918C9.828 10.99 11.204 12 13 12v1c-2.202 0-3.827-1.24-4.874-2.418A10.595 10.595 0 0 1 7 9.05c-.26.43-.636.98-1.126 1.532C4.827 11.76 3.202 13 1 13H.5a.5.5 0 0 1 0-1H1c1.798 0 3.173-1.01 4.126-2.082A9.624 9.624 0 0 0 6.444 8a9.624 9.624 0 0 0-1.317-1.918C4.172 5.01 2.796 4 1 4H.5a.5.5 0 0 1-.5-.5z\"/>\n                            <path d=\"M13 5.466V1.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384l-2.36 1.966a.25.25 0 0 1-.41-.192zm0 9v-3.932a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384l-2.36 1.966a.25.25 0 0 1-.41-.192z\"/>\n                        </svg>\n                        <p className=\"animated bounce\" id=\"playPrompt\" style={{visibility: `${playVal ? 'hidden' : 'visible'}`}}>Click-me!</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Visualizer;","import Visualizer from './Visualizer';\nimport './App.css';\n\n// everything up to date!\n//\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Visualizer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n//"],"sourceRoot":""}