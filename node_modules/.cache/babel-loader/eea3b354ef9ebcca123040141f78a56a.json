{"ast":null,"code":"//\nexport function bubbleSort(arr,animations,cout){var i=0;var j=0;if(i<arr.length){for(var _j=0;_j<arr.length-i-1;_j++){var a=arr[_j];var b=arr[_j+1];if(a>b){swap(arr,_j,_j+1);animations.push([_j,_j+1,true,cout]);}}}else{i=0;return animations;}i++;return animations;}var swap=function swap(arr,a,b){var temp=arr[a];arr[a]=arr[b];arr[b]=temp;};export function mergeSort(arr){var animations=[];if(arr.length<=1)return arr;var auxArr=arr.slice();mergeSortHelper(arr,0,arr.length-1,auxArr,animations);return animations;}function mergeSortHelper(mainArray,startIdx,endIdx,auxArr,animations){if(startIdx===endIdx)return;var middleIdx=Math.floor((startIdx+endIdx)/2);mergeSortHelper(auxArr,startIdx,middleIdx,mainArray,animations);mergeSortHelper(auxArr,middleIdx+1,endIdx,mainArray,animations);doMerge(mainArray,startIdx,middleIdx,endIdx,auxArr,animations);}//\nfunction doMerge(mainArray,startIdx,middleIdx,endIdx,auxiliaryArray,animations){var k=startIdx;var i=startIdx;var j=middleIdx+1;while(i<=middleIdx&&j<=endIdx){animations.push([i,j,false]);animations.push([i,j,false]);if(auxiliaryArray[i]<=auxiliaryArray[j]){//swaping below\nanimations.push([k,auxiliaryArray[i],true,auxiliaryArray[j]]);mainArray[k++]=auxiliaryArray[i++];}else{//swaping below\nanimations.push([k,auxiliaryArray[j],true,auxiliaryArray[i]]);mainArray[k++]=auxiliaryArray[j++];}}while(i<=middleIdx){animations.push([i,i,false]);animations.push([i,i,false]);//swaping below\nconsole.log(auxiliaryArray[i],i);animations.push([k,auxiliaryArray[i],true,auxiliaryArray[k]]);mainArray[k++]=auxiliaryArray[i++];}while(j<=endIdx){animations.push([j,j,false]);animations.push([j,j,false]);//swapping below\nconsole.log(auxiliaryArray[j],mainArray[j]);animations.push([k,auxiliaryArray[j],true,auxiliaryArray[i]]);mainArray[k++]=auxiliaryArray[j++];}}function quickSwap(items,leftIndex,rightIndex){var temp=items[leftIndex];items[leftIndex]=items[rightIndex];items[rightIndex]=temp;}function partition(items,left,right,animations){var pivot=items[Math.floor((right+left)/2)],//middle element\ni=left,//left pointer\nj=right;//right pointer\nwhile(i<=j){while(items[i]<pivot){i++;}while(items[j]>pivot){j--;}if(i<=j){quickSwap(items,i,j);//swapping two elements\nanimations.push([i,j,true]);i++;j--;}}return i;}export function quickSort(items,left,right,animations){var index;if(items.length>1){index=partition(items,left,right,animations);//index returned from partition\nif(left<index-1){//more elements on the left side of the pivot\nquickSort(items,left,index-1,animations);}if(index<right){//more elements on the right side of the pivot\nquickSort(items,index,right,animations);}}return items;}export function insertionSort(arr,animations){for(var i=0;i<arr.length;i++){var curr=arr[i];var j=i-1;while(j>=0&&arr[j]>curr){arr[j+1]=arr[j];animations.push([j,j+1]);j--;}arr[j+1]=curr;}return animations;}","map":{"version":3,"names":["bubbleSort","arr","animations","cout","i","j","length","a","b","swap","push","temp","mergeSort","auxArr","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","doMerge","auxiliaryArray","k","console","log","quickSwap","items","leftIndex","rightIndex","partition","left","right","pivot","quickSort","index","insertionSort","curr"],"sources":["/Users/Jake.Squier/SE-Projects/sorting-visualizer/Sorting-Visualizer/src/sortingAlgorithims.js"],"sourcesContent":["//\nexport function bubbleSort(arr, animations, cout){\n    let i = 0;\n    let j = 0;\n    if (i < arr.length) {\n        for (let j = 0; j < arr.length - i - 1; j++) {\n          let a = arr[j];\n          let b = arr[j + 1];\n          if (a > b) {\n            swap(arr, j, j + 1);\n            animations.push([j, j+1, true, cout])\n          }\n        }\n      } else {\n        i = 0;\n        return animations;\n      }\n      i++;\n      return animations;\n}\n\nconst swap = (arr, a, b) => {\n    let temp = arr[a];\n    arr[a] = arr[b];\n    arr[b] = temp;\n};\n\nexport function mergeSort(arr){\n    const animations = [];\n    if(arr.length <= 1) return arr;\n    const auxArr = arr.slice();\n    mergeSortHelper(arr, 0, arr.length - 1, auxArr, animations);\n    return animations;\n}\n\nfunction mergeSortHelper(\n    mainArray,\n    startIdx,\n    endIdx,\n    auxArr,\n    animations,\n  ) {\n    if (startIdx === endIdx) return;\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\n    mergeSortHelper(auxArr, startIdx, middleIdx, mainArray, animations);\n    mergeSortHelper(auxArr, middleIdx + 1, endIdx, mainArray, animations);\n    doMerge(mainArray, startIdx, middleIdx, endIdx, auxArr, animations);\n}\n//\nfunction doMerge(\n  mainArray,\n  startIdx,\n  middleIdx,\n  endIdx,\n  auxiliaryArray,\n  animations,\n) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    animations.push([i, j, false]);\n    animations.push([i, j, false]);\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      //swaping below\n      animations.push([k, auxiliaryArray[i], true, auxiliaryArray[j]]);\n      mainArray[k++] = auxiliaryArray[i++];\n    } else {\n      //swaping below\n      animations.push([k, auxiliaryArray[j], true, auxiliaryArray[i]]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    animations.push([i, i, false]);\n    animations.push([i, i, false]);\n    //swaping below\n    console.log(auxiliaryArray[i], i)\n    animations.push([k, auxiliaryArray[i], true, auxiliaryArray[k]]);\n    mainArray[k++] = auxiliaryArray[i++];\n  }\n  while (j <= endIdx) {\n    animations.push([j, j, false]);\n    animations.push([j, j, false]);\n    //swapping below\n    console.log(auxiliaryArray[j], mainArray[j])\n    animations.push([k, auxiliaryArray[j], true,  auxiliaryArray[i]]);\n    mainArray[k++] = auxiliaryArray[j++];\n  }\n}\n\nfunction quickSwap(items, leftIndex, rightIndex) {\n    var temp = items[leftIndex];\n    items[leftIndex] = items[rightIndex];\n    items[rightIndex] = temp;\n}\n\nfunction partition(items, left, right, animations) {\n    var pivot   = items[Math.floor((right + left) / 2)], //middle element\n    i       = left, //left pointer\n    j       = right; //right pointer\n    while (i <= j) {\n        while (items[i] < pivot) {\n            i++;\n        }\n        while (items[j] > pivot) {\n            j--;\n        }\n        if (i <= j) {\n            quickSwap(items, i, j); //swapping two elements\n            animations.push([i, j, true])\n            i++;\n            j--;\n        }\n    }\n    return i;\n}\n\nexport function quickSort(items, left, right, animations) {\n    var index;\n    if (items.length > 1) {\n        index = partition(items, left, right, animations); //index returned from partition\n        if (left < index - 1) { //more elements on the left side of the pivot\n            quickSort(items, left, index - 1, animations);\n        }\n        if (index < right) { //more elements on the right side of the pivot\n            quickSort(items, index, right, animations);\n        }\n    }\n    return items;\n}\n\nexport function insertionSort(arr, animations){\n    for(let i = 0; i < arr.length; i++){\n        let curr = arr[i]\n        let j = i - 1\n\n        while (j >= 0 && arr[j] > curr) {\n            arr[j + 1] = arr[j]\n            animations.push([j, j+1])\n            j--\n        }\n\n        arr[j + 1] = curr\n    }\n    return animations;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}